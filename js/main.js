// Generated by CoffeeScript 1.6.2
(function() {
  var ASSETS, BULLET_IMG, Bullet, Enemy, PLAYER_IMG, Player, add, enemies, enemy_bullets, game, intoWindow, isInWindow, player_bullets, players, remove,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  ASSETS = [PLAYER_IMG = 'player.png', BULLET_IMG = 'icon0.png'];

  game = null;

  players = null;

  enemies = null;

  player_bullets = null;

  enemy_bullets = null;

  add = function(inst) {
    return game.currentScene.addChild(inst);
  };

  remove = function(inst) {
    if (typeof inst.onremove === "function") {
      inst.onremove();
    }
    return game.currentScene.removeChild(inst);
  };

  isInWindow = function(node) {
    var _ref, _ref1;

    return (0 <= (_ref = node.x) && _ref < game.width) && (0 <= (_ref1 = node.y) && _ref1 < game.height);
  };

  intoWindow = function(node) {
    var t;

    if (node.x < 0) {
      node.x = 0;
    }
    t = game.width - 1 - node.width;
    if (node.x > t) {
      node.x = t;
    }
    if (node.y < 0) {
      node.y = 0;
    }
    t = game.height - 1 - node.height;
    if (node.y > t) {
      return node.y = t;
    }
  };

  Player = (function(_super) {
    __extends(Player, _super);

    function Player() {
      Player.__super__.constructor.call(this, 32, 32);
      this.image = game.assets[PLAYER_IMG];
      this.frame = 27;
      this.scale(2, 2);
      this.x = game.width / 2;
      this.y = game.height / 2;
      players.addChild(this);
    }

    Player.prototype.onenterframe = function() {
      if (game.frame % (game.fps / 10) === 0) {
        return new Bullet(this.x, this.y, player_bullets);
      }
    };

    return Player;

  })(Sprite);

  Enemy = (function(_super) {
    __extends(Enemy, _super);

    function Enemy(x, y) {
      Enemy.__super__.constructor.call(this, 32, 32);
      this.image = game.assets[PLAYER_IMG];
      this.frame = 27;
      this.scale(2, -2);
      this.x = x;
      this.y = y;
      enemies.addChild(this);
    }

    return Enemy;

  })(Sprite);

  Bullet = (function(_super) {
    __extends(Bullet, _super);

    function Bullet(x, y, group) {
      this.group = group;
      Bullet.__super__.constructor.call(this, 16, 16);
      this.image = game.assets[BULLET_IMG];
      this.frame = 48;
      this.x = x;
      this.y = y;
      this.group.addChild(this);
    }

    Bullet.prototype.onenterframe = function() {
      this.y += -10;
      if (!isInWindow(this)) {
        return this.group.removeChild(this);
      }
    };

    return Bullet;

  })(Sprite);

  window.onload = function() {
    game = new Game(400, 600);
    game.fps = 60;
    game.preload(ASSETS);
    game.onload = function() {
      var bex, bey, player, scene;

      scene = game.rootScene;
      scene.backgroundColor = '#ffffff';
      player_bullets = new Group;
      add(player_bullets);
      enemy_bullets = new Group;
      add(enemy_bullets);
      players = new Group;
      add(players);
      enemies = new Group;
      add(enemies);
      player = new Player;
      new Enemy(game.width / 2, game.height / 3);
      scene.onenterframe = function() {
        var char_set, char_sets, first, second, _i, _len, _results;

        char_sets = [[player_bullets, enemies], [enemy_bullets, players], [enemies, players]];
        _results = [];
        for (_i = 0, _len = char_sets.length; _i < _len; _i++) {
          char_set = char_sets[_i];
          _results.push((function() {
            var _j, _len1, _ref, _results1;

            _ref = char_set[0].childNodes;
            _results1 = [];
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              first = _ref[_j];
              _results1.push((function() {
                var _k, _len2, _ref1, _results2;

                _ref1 = char_set[1].childNodes;
                _results2 = [];
                for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
                  second = _ref1[_k];
                  if (first.intersect(second)) {
                    _results2.push(alert('hit!'));
                  } else {
                    _results2.push(void 0);
                  }
                }
                return _results2;
              })());
            }
            return _results1;
          })());
        }
        return _results;
      };
      bex = bey = 0;
      scene.ontouchstart = function(e) {
        bex = e.x;
        return bey = e.y;
      };
      return scene.ontouchmove = function(e) {
        player.x += e.x - bex;
        player.y += e.y - bey;
        intoWindow(player);
        bex = e.x;
        return bey = e.y;
      };
    };
    return game.start();
  };

}).call(this);
